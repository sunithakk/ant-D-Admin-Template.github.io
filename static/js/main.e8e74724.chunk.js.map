{"version":3,"sources":["container/Auth/Login/index.js","container/Auth/ForgotPassword/index.js","components/Layout/Footer/index.js","components/Layout/SideBar/index.js","container/Dashbord/index.js","container/User/Table.js","container/User/Test.js","container/User/index.js","container/vendor/Table.js","container/vendor/Test.js","container/vendor/index.js","container/Product/index.js","container/Staff/Table.js","container/Staff/index.js","container/Role/Table.js","container/Role/index.js","container/Orders/Table.js","container/Orders/index.js","container/PackingVendors/Table.js","container/PackingVendors/index.js","container/Referral/Table.js","container/Referral/index.js","container/RootContainers.js","index.js"],"names":["Title","Typography","Login","handleSubmit","e","console","log","localStorage","setItem","props","history","push","className","onSubmit","this","level","Item","prefix","type","style","color","placeholder","htmlType","to","React","Component","Footer","Header","Layout","Sider","Content","SubMenu","Menu","SiderDemo","state","collapsed","toggle","setState","handleLogout","clear","window","location","reload","children","avatar","i18n","fixed","rightContent","username","notifications","onCollapseChange","onAllNotificationsRead","key","mode","onClick","handleClickMenu","title","marginLeft","src","trigger","collapsible","theme","defaultSelectedKeys","background","padding","display","justifyContent","margin","minHeight","Meta","Card","Dashbord","href","gutter","span","description","columns","dataIndex","render","text","data","name","age","address","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","Option","Form","Select","EditableContext","createContext","EditableFormRow","create","form","index","Provider","value","EditableCell","editing","toggleEdit","input","focus","save","handleSave","validateFields","error","values","currentTarget","id","renderCell","getFieldDecorator","rules","required","message","initialValue","ref","node","onPressEnter","onBlur","paddingRight","editable","restProps","Consumer","EditableTable","handleDelete","dataSource","filter","item","handleAdd","count","newData","row","findIndex","splice","width","length","onConfirm","CreatedAt","UpdatedAt","components","body","cell","map","col","onCell","marginBottom","rowClassName","bordered","User","Test","vendor","Product","loading","visible","showModal","handleOk","setTimeout","handleCancel","preventDefault","err","normFile","Array","isArray","fileList","formItemLayout","labelCol","wrapperCol","onOk","onCancel","footer","label","hasFeedback","extra","valuePropName","getValueFromEvent","action","listType","cover","alt","actions","WrappedDemo","Staff","Role","Orders","PackingVendor","Referral","RootContainers","opened","items","getRoutes","path","exact","component","DashBoard","Vendor","routes","toggleDrawer","handleDrawerToggle","user","getItem","route","Auth","ForgotPassword","document","getElementById"],"mappings":"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","file":"static/js/main.e8e74724.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nclass Login extends React.Component {\r\n    handleSubmit = e => {\r\n        console.log(e);\r\n        localStorage.setItem(\"myData\", \"sunitha\");\r\n        this.props.history.push(\"/dashboard\");\r\n        // e.preventDefault();\r\n        // this.props.form.validateFields((err, values) => {\r\n        //     if (!err) {\r\n        //         console.log(\"Received values of form: \", values);\r\n        //     }\r\n        // });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-div\">\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Title level={3}>Login to Your App</Title>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={\r\n                                <Icon\r\n                                    type=\"mail\"\r\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                                />\r\n                            }\r\n                            placeholder=\"Email\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={\r\n                                <Icon\r\n                                    type=\"lock\"\r\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                                />\r\n                            }\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <div className=\"forgot-password\">\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button\"\r\n                            >\r\n                                Log in\r\n                            </Button>\r\n                            <Link\r\n                                className=\"login-form-forgot\"\r\n                                to=\"/forgotpassword\"\r\n                            >\r\n                                Forgot password\r\n                            </Link>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Typography } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nclass Login extends React.Component {\r\n    handleSubmit = e => {\r\n        console.log(e);\r\n        localStorage.setItem(\"myData\", \"sunitha\");\r\n        this.props.history.push(\"/dashboard\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-div\">\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Title level={3}>Forgot Password</Title>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={\r\n                                <Icon\r\n                                    type=\"mail\"\r\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                                />\r\n                            }\r\n                            placeholder=\"Email\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={\r\n                                <Icon\r\n                                    type=\"lock\"\r\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                                />\r\n                            }\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <div className=\"forgot-password\">\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button\"\r\n                            >\r\n                                submit\r\n                            </Button>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <text>Footer</text>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Fragment } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Menu, Layout, Avatar, Popover, Badge, List, Icon } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport classnames from \"classnames\";\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass SiderDemo extends React.Component {\r\n    state = {\r\n        collapsed: false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    };\r\n\r\n    handleLogout = () => {\r\n        console.log(localStorage.clear(\"myData\"));\r\n        localStorage.clear(\"myData\");\r\n        window.location.reload();\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        const {\r\n            i18n,\r\n            fixed,\r\n            avatar,\r\n            username,\r\n            collapsed,\r\n            notifications,\r\n            onCollapseChange,\r\n            onAllNotificationsRead\r\n        } = this.props;\r\n\r\n        const rightContent = [\r\n            <Menu key=\"user\" mode=\"horizontal\" onClick={this.handleClickMenu}>\r\n                <SubMenu\r\n                    title={\r\n                        <Fragment>\r\n                            <span>{\"Sunitha Hegde\"}</span>\r\n                            <Avatar style={{ marginLeft: 8 }} src={avatar} />\r\n                        </Fragment>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"SignOut\">\r\n                        <div onClick={this.handleLogout}>Sign out</div>\r\n                        <br></br>\r\n                        <div onClick={this.handleLogout}>Change Password</div>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n            </Menu>\r\n        ];\r\n\r\n        return (\r\n            <Layout>\r\n                <Sider\r\n                    trigger={null}\r\n                    collapsible\r\n                    collapsed={this.state.collapsed}\r\n                >\r\n                    <div className=\"logo\">\r\n                        <text className=\"app-name\">App Name</text>\r\n                    </div>\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"inline\"\r\n                        defaultSelectedKeys={[\"1\"]}\r\n                    >\r\n                        <Menu.Item key=\"1\">\r\n                            <Link to=\"/dashboard\">\r\n                                <Icon type=\"dashboard\" />\r\n                                <span>DashBoard</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"9\">\r\n                            <Link to=\"/products\">\r\n                                <Icon type=\"desktop\" />\r\n                                <span>Product Management</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"2\">\r\n                            <Link to=\"/users\">\r\n                                <Icon type=\"user\" />\r\n                                <span>User Management</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"3\">\r\n                            <Link to=\"/vendors\">\r\n                                <Icon type=\"user\" />\r\n                                <span>Vendor Management</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Link to=\"/staff\">\r\n                                <Icon type=\"user\" />\r\n                                <span>Staff Management</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"5\">\r\n                            <Link to=\"/role\">\r\n                                <Icon type=\"menu\" />\r\n                                <span>Role Management</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"6\">\r\n                            <Link to=\"/order\">\r\n                                <Icon type=\"desktop\" />\r\n                                <span>Order Management</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"7\">\r\n                            <Link to=\"/packingvendor\">\r\n                                <Icon type=\"desktop\" />\r\n                                <span>Packing Vendor</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"8\">\r\n                            <Link to=\"/referral\">\r\n                                <Icon type=\"desktop\" />\r\n                                <span>Referral Management</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"10\">\r\n                            <Icon type=\"desktop\" />\r\n                            <span>CashBook</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"11\">\r\n                            <Icon type=\"user\" />\r\n                            <span>Add Banners</span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header\r\n                        style={{\r\n                            background: \"#fff\",\r\n                            padding: 0,\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\"\r\n                        }}\r\n                    >\r\n                        <Icon\r\n                            className=\"trigger\"\r\n                            type={\r\n                                this.state.collapsed\r\n                                    ? \"menu-unfold\"\r\n                                    : \"menu-fold\"\r\n                            }\r\n                            onClick={this.toggle}\r\n                        />\r\n                        <div className=\"rightContainer\">{rightContent}</div>\r\n                    </Header>\r\n\r\n                    {/* <Layout.Header\r\n                        className={classnames(styles.header, {\r\n                            [styles.fixed]: fixed,\r\n                            [styles.collapsed]: collapsed\r\n                        })}\r\n                        id=\"layoutHeader\"\r\n                    >\r\n                        <div\r\n                            className={styles.button}\r\n                            // onClick={onCollapseChange.bind(this, !collapsed)}\r\n                        >\r\n                            <Icon\r\n                                type={classnames({\r\n                                    \"menu-unfold\": collapsed,\r\n                                    \"menu-fold\": !collapsed\r\n                                })}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={styles.rightContainer}>\r\n                            {rightContent}\r\n                        </div>\r\n                    </Layout.Header> */}\r\n                    <Content\r\n                        style={{\r\n                            margin: \"24px 16px\",\r\n                            padding: 24,\r\n                            background: \"#fff\",\r\n                            minHeight: 280\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </Content>\r\n                    <Footer style={{ background: \"#fff\", padding: 0 }} />\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default SiderDemo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./index.css\";\r\nimport { Breadcrumb, Row, Col, Card, Avatar } from \"antd\";\r\nconst { Meta } = Card;\r\n\r\nclass Dashbord extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">Dashbord</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"dashboard\">\r\n                    <Row gutter={16}>\r\n                        <Col className=\"gutter-row\" span={6}>\r\n                            <div className=\"gutter-box\">\r\n                                <Card>\r\n                                    <Meta\r\n                                        avatar={\r\n                                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                        }\r\n                                        title=\"Total User\"\r\n                                        description=\"10,0000\"\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={6}>\r\n                            <div className=\"gutter-box\">\r\n                                <Card>\r\n                                    <Meta\r\n                                        avatar={\r\n                                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                        }\r\n                                        title=\"Total Vendors\"\r\n                                        description=\"20,000\"\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={6}>\r\n                            <div className=\"gutter-box\">\r\n                                <Card>\r\n                                    <Meta\r\n                                        avatar={\r\n                                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                        }\r\n                                        title=\"Total Orders\"\r\n                                        description=\"10,00,000\"\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={6}>\r\n                            <div className=\"gutter-box\">\r\n                                <Card>\r\n                                    <Meta\r\n                                        avatar={\r\n                                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                        }\r\n                                        title=\"Refferals\"\r\n                                        description=\"50,00,000\"\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"dashboard\">\r\n                    <Row gutter={16}>\r\n                        <Col className=\"gutter-row\" span={6}>\r\n                            <div className=\"gutter-box\">\r\n                                <Card>\r\n                                    <Meta\r\n                                        avatar={\r\n                                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                        }\r\n                                        title=\"Total Profit\"\r\n                                        description=\"60,00,000\"\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nDashbord.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Dashbord;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Button } from \"antd\";\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        render: text => <a>{text}</a>\r\n    },\r\n    {\r\n        title: \"Age\",\r\n        dataIndex: \"age\"\r\n    },\r\n    {\r\n        title: \"Address\",\r\n        dataIndex: \"address\"\r\n    }\r\n];\r\nconst data = [\r\n    {\r\n        key: \"1\",\r\n        name: \"John Brown\",\r\n        age: 32,\r\n        address: \"New York No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"2\",\r\n        name: \"Jim Green\",\r\n        age: 42,\r\n        address: \"London No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"3\",\r\n        name: \"Joe Black\",\r\n        age: 32,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"4\",\r\n        name: \"Disabled User\",\r\n        age: 99,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"1\",\r\n        name: \"John Brown\",\r\n        age: 32,\r\n        address: \"New York No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"2\",\r\n        name: \"Jim Green\",\r\n        age: 42,\r\n        address: \"London No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"3\",\r\n        name: \"Joe Black\",\r\n        age: 32,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"4\",\r\n        name: \"Disabled User\",\r\n        age: 99,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"3\",\r\n        name: \"Joe Black\",\r\n        age: 32,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"4\",\r\n        name: \"Disabled User\",\r\n        age: 99,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    }\r\n];\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        console.log(\r\n            `selectedRowKeys: ${selectedRowKeys}`,\r\n            \"selectedRows: \",\r\n            selectedRows\r\n        );\r\n    },\r\n    getCheckboxProps: record => ({\r\n        disabled: record.name === \"Disabled User\", // Column configuration not to be checked\r\n        name: record.name\r\n    })\r\n};\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Button\r\n                        onClick={this.handleAdd}\r\n                        type=\"primary\"\r\n                        style={{ marginBottom: 16 }}\r\n                    >\r\n                        Add a row\r\n                    </Button>\r\n                    <Table\r\n                        rowSelection={rowSelection}\r\n                        columns={columns}\r\n                        dataSource={data}\r\n                        // pagination={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from \"antd\";\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(\r\n                    <Input\r\n                        ref={node => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>\r\n                        {this.renderCell}\r\n                    </EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                width: \"30%\",\r\n                editable: true\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: \"age\"\r\n            },\r\n            {\r\n                title: \"address\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"CreatedAt\",\r\n                dataIndex: \"CreatedAt\"\r\n            },\r\n            {\r\n                title: \"UpdatedAt\",\r\n                dataIndex: \"UpdatedAt\"\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: \"0\",\r\n                    name: \"Amith Kumar\",\r\n                    age: \"Active\",\r\n                    address: \"London, Park Lane no. 0\",\r\n                    CreatedAt: \"22:11:2020\",\r\n                    UpdatedAt: \"22:11:2020\"\r\n                },\r\n                {\r\n                    key: \"1\",\r\n                    name: \"Sunil Hegde\",\r\n                    age: \"Blocked\",\r\n                    address: \"Bengaluru.\",\r\n                    CreatedAt: \"22:11:2020\",\r\n                    UpdatedAt: \"22:11:2020\"\r\n                }\r\n            ],\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter(item => item.key !== key)\r\n        });\r\n    };\r\n\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ dataSource: newData });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            }\r\n        };\r\n        const columns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"select-box\">\r\n                    <Button\r\n                        onClick={this.handleAdd}\r\n                        type=\"primary\"\r\n                        style={{ marginBottom: 16 }}\r\n                    >\r\n                        Add Users\r\n                    </Button>\r\n\r\n                    <div>\r\n                        <Select\r\n                        //   {...field}\r\n                        // onChange={value => setFieldValue(\"fruit\", value)}\r\n                        // onBlur={() => setFieldTouched(\"fruit\", true)}\r\n                        // value={values.fruit}\r\n                        >\r\n                            <Option key={1} value=\"Apple\">\r\n                                Admin\r\n                            </Option>\r\n                            <Option key={2} value=\"Orange\">\r\n                                vendor\r\n                            </Option>\r\n                            <Option key={3} value=\"Mango\">\r\n                                packing vendor\r\n                            </Option>\r\n                            <Option key={4} value=\"Pineapple\">\r\n                                Staff\r\n                            </Option>\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <Table\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        bordered\r\n                        dataSource={dataSource}\r\n                        columns={columns}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditableTable;\r\n\r\n// ReactDOM.render(<EditableTable />, document.getElementById(\"container\"));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport EditableTable from \"./Table\";\r\nimport Test from \"./Test\";\r\nclass User extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">User</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"table\">\r\n                    {/* <EditableTable></EditableTable> */}\r\n                    <Test />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUser.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Button } from \"antd\";\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        render: text => <a>{text}</a>\r\n    },\r\n    {\r\n        title: \"Age\",\r\n        dataIndex: \"age\"\r\n    },\r\n    {\r\n        title: \"Address\",\r\n        dataIndex: \"address\"\r\n    }\r\n];\r\nconst data = [\r\n    {\r\n        key: \"1\",\r\n        name: \"John Brown\",\r\n        age: 32,\r\n        address: \"New York No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"2\",\r\n        name: \"Jim Green\",\r\n        age: 42,\r\n        address: \"London No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"3\",\r\n        name: \"Joe Black\",\r\n        age: 32,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"4\",\r\n        name: \"Disabled User\",\r\n        age: 99,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"1\",\r\n        name: \"John Brown\",\r\n        age: 32,\r\n        address: \"New York No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"2\",\r\n        name: \"Jim Green\",\r\n        age: 42,\r\n        address: \"London No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"3\",\r\n        name: \"Joe Black\",\r\n        age: 32,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"4\",\r\n        name: \"Disabled User\",\r\n        age: 99,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"3\",\r\n        name: \"Joe Black\",\r\n        age: 32,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    },\r\n    {\r\n        key: \"4\",\r\n        name: \"Disabled User\",\r\n        age: 99,\r\n        address: \"Sidney No. 1 Lake Park\"\r\n    }\r\n];\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        console.log(\r\n            `selectedRowKeys: ${selectedRowKeys}`,\r\n            \"selectedRows: \",\r\n            selectedRows\r\n        );\r\n    },\r\n    getCheckboxProps: record => ({\r\n        disabled: record.name === \"Disabled User\", // Column configuration not to be checked\r\n        name: record.name\r\n    })\r\n};\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Button\r\n                        onClick={this.handleAdd}\r\n                        type=\"primary\"\r\n                        style={{ marginBottom: 16 }}\r\n                    >\r\n                        Add a row\r\n                    </Button>\r\n                    <Table\r\n                        rowSelection={rowSelection}\r\n                        columns={columns}\r\n                        dataSource={data}\r\n                        // pagination={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(\r\n                    <Input\r\n                        ref={node => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>\r\n                        {this.renderCell}\r\n                    </EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: \"name\",\r\n                dataIndex: \"name\",\r\n                width: \"30%\",\r\n                editable: true\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: \"age\"\r\n            },\r\n            {\r\n                title: \"address\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"CreatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"UpdatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: \"0\",\r\n                    name: \"sunil Hegde\",\r\n                    age: \"Active\",\r\n                    address: \"London, Park Lane no. 0\",\r\n                    CreatedAt: \"23-12-2020\"\r\n                },\r\n                {\r\n                    key: \"1\",\r\n                    name: \"Anil Hegde\",\r\n                    age: \"Active\",\r\n                    address: \"London, Park Lane no. 1\",\r\n                    CreatedAt: \"23-12-2020\"\r\n                }\r\n            ],\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter(item => item.key !== key)\r\n        });\r\n    };\r\n\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ dataSource: newData });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            }\r\n        };\r\n        const columns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{ marginBottom: 16 }}\r\n                >\r\n                    Add Vendors\r\n                </Button>\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => \"editable-row\"}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditableTable;\r\n\r\n// ReactDOM.render(<EditableTable />, document.getElementById(\"container\"));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport EditableTable from \"./Table\";\r\nimport Test from \"./Test\";\r\n\r\nclass vendor extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">Vendor</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"table\">\r\n                    {/* <EditableTable></EditableTable> */}\r\n                    <Test />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nvendor.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default vendor;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport {\r\n    Card,\r\n    Icon,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    Form,\r\n    Select,\r\n    Upload,\r\n    Input\r\n} from \"antd\";\r\nimport \"./index.css\";\r\n\r\nconst { Meta } = Card;\r\nconst { Option } = Select;\r\n\r\nclass Product extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        visible: false\r\n    };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n        }, 3000);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(\"Received values of form: \", values);\r\n            }\r\n        });\r\n    };\r\n\r\n    normFile = e => {\r\n        console.log(\"Upload event:\", e);\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n    render() {\r\n        const { visible, loading } = this.state;\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 }\r\n        };\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">Product</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"main-div\">\r\n                    <Button\r\n                        onClick={this.showModal}\r\n                        type=\"primary\"\r\n                        style={{ marginBottom: 16 }}\r\n                    >\r\n                        Add Products\r\n                    </Button>\r\n                    <Modal\r\n                        visible={visible}\r\n                        title=\"Add Products\"\r\n                        onOk={this.handleOk}\r\n                        onCancel={this.handleCancel}\r\n                        footer={[\r\n                            <Button key=\"back\" onClick={this.handleCancel}>\r\n                                Return\r\n                            </Button>,\r\n                            <Button\r\n                                key=\"submit\"\r\n                                type=\"primary\"\r\n                                loading={loading}\r\n                                onClick={this.handleOk}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        ]}\r\n                    >\r\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                            <Form.Item {...formItemLayout} label=\"Product Name\">\r\n                                {getFieldDecorator(\"Product Name\", {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message:\r\n                                                \"Please input your Product Name\"\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Input placeholder=\"Please input your Product Name\" />\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item {...formItemLayout} label=\"Description\">\r\n                                {getFieldDecorator(\"Product Description\", {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message:\r\n                                                \"Please input your Product Description\"\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Input placeholder=\"Please input your Product Description\" />\r\n                                )}\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"Categeory\" hasFeedback>\r\n                                {getFieldDecorator(\"Categeory\", {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message:\r\n                                                \"Please select your Categeory!\"\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Select placeholder=\"Please select a Categeory\">\r\n                                        <Option value=\"china\">oil</Option>\r\n                                        <Option value=\"usa\">Snacks</Option>\r\n                                        <Option value=\"china\">\r\n                                            fruits vegetables\r\n                                        </Option>\r\n                                        <Option value=\"usa\">\r\n                                            Home and Kitchen\r\n                                        </Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Vendor\" hasFeedback>\r\n                                {getFieldDecorator(\"Vendor\", {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message:\r\n                                                \"Please select your Vendor!\"\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Select placeholder=\"Please select a Vendor\">\r\n                                        <Option value=\"china\">Vendor1</Option>\r\n                                        <Option value=\"usa\">Vendor2</Option>\r\n                                        <Option value=\"china\">Vendor3</Option>\r\n                                        <Option value=\"usa\">Vendor4</Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"Upload\" extra=\"test\">\r\n                                {getFieldDecorator(\"upload\", {\r\n                                    valuePropName: \"fileList\",\r\n                                    getValueFromEvent: this.normFile\r\n                                })(\r\n                                    <Upload\r\n                                        name=\"logo\"\r\n                                        action=\"/upload.do\"\r\n                                        listType=\"picture\"\r\n                                    >\r\n                                        <Button>\r\n                                            <Icon type=\"upload\" /> Click to\r\n                                            upload\r\n                                        </Button>\r\n                                    </Upload>\r\n                                )}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    <Row gutter={16}>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_DALS_DT_2_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_DRYFRUITS_DT_3_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_ATTARICE_DT_1_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_DALS_DT_2_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_DRYFRUITS_DT_3_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_ATTARICE_DT_1_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_DALS_DT_2_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_DRYFRUITS_DT_3_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={8}>\r\n                            <Card\r\n                                style={{ width: 300 }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src=\"https://www.bigbasket.com/media/customPage/b01eee88-e6bc-410e-993c-dedd012cf04b/989240ad-a5c7-4a6c-86f4-98721a55824d/3a591b4a-4920-4951-a710-b5b608e0ff22/T1_All_ATTARICE_DT_1_480x360_25thDec.jpg\"\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <Icon type=\"edit\" key=\"edit\" />,\r\n                                    <Icon type=\"delete\" key=\"ellipsis\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    // title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProduct.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst WrappedDemo = Form.create({ name: \"validate_other\" })(Product);\r\n\r\nexport default WrappedDemo;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(\r\n                    <Input\r\n                        ref={node => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>\r\n                        {this.renderCell}\r\n                    </EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                width: \"30%\",\r\n                editable: true\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: \"age\"\r\n            },\r\n            {\r\n                title: \"address\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"CreatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"UpdatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: \"0\",\r\n                    name: \"Edward King 0\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 0\"\r\n                },\r\n                {\r\n                    key: \"1\",\r\n                    name: \"Edward King 1\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 1\"\r\n                }\r\n            ],\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter(item => item.key !== key)\r\n        });\r\n    };\r\n\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ dataSource: newData });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            }\r\n        };\r\n        const columns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                {/* <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{ marginBottom: 16 }}\r\n                >\r\n                    Add Staff\r\n                </Button> */}\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{ marginBottom: 16 }}\r\n                >\r\n                    Add Staff\r\n                </Button>\r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => \"editable-row\"}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditableTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb } from \"antd\";\r\n// import EditableTable from \"./Table\";\r\nimport Test from \"./Table\";\r\nclass Staff extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">Staff</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"table\">\r\n                    {/* <EditableTable></EditableTable> */}\r\n                    <Test />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStaff.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default Staff;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(\r\n                    <Input\r\n                        ref={node => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>\r\n                        {this.renderCell}\r\n                    </EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                width: \"30%\",\r\n                editable: true\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: \"age\"\r\n            },\r\n            {\r\n                title: \"address\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"CreatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"UpdatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: \"0\",\r\n                    name: \"admin\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 0\"\r\n                },\r\n                {\r\n                    key: \"1\",\r\n                    name: \"vendor\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 1\"\r\n                }\r\n            ],\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter(item => item.key !== key)\r\n        });\r\n    };\r\n\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ dataSource: newData });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            }\r\n        };\r\n        const columns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{ marginBottom: 16 }}\r\n                >\r\n                    Add Role\r\n                </Button>\r\n\r\n             \r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => \"editable-row\"}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditableTable;\r\n\r\n// ReactDOM.render(<EditableTable />, document.getElementById(\"container\"));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport Test from \"./Table\";\r\nclass Role extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">Role</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"table\">\r\n                    <Test />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRole.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Role;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(\r\n                    <Input\r\n                        ref={node => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>\r\n                        {this.renderCell}\r\n                    </EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                width: \"30%\",\r\n                editable: true\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: \"age\"\r\n            },\r\n            {\r\n                title: \"address\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"CreatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"UpdatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: \"0\",\r\n                    name: \"admin\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 0\"\r\n                },\r\n                {\r\n                    key: \"1\",\r\n                    name: \"vendor\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 1\"\r\n                }\r\n            ],\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter(item => item.key !== key)\r\n        });\r\n    };\r\n\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ dataSource: newData });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            }\r\n        };\r\n        const columns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{ marginBottom: 16 }}\r\n                >\r\n                    Add Orders\r\n                </Button>\r\n\r\n                {/* <div>\r\n                    <Select\r\n                    //   {...field}\r\n                    // onChange={value => setFieldValue(\"fruit\", value)}\r\n                    // onBlur={() => setFieldTouched(\"fruit\", true)}\r\n                    // value={values.fruit}\r\n                    >\r\n                        <Option key={1} value=\"Apple\">\r\n                            Admin\r\n                        </Option>\r\n                        <Option key={2} value=\"Orange\">\r\n                            vendor\r\n                        </Option>\r\n                        <Option key={3} value=\"Mango\">\r\n                            packing vendor\r\n                        </Option>\r\n                        <Option key={4} value=\"Pineapple\">\r\n                            Staff\r\n                        </Option>\r\n                    </Select>\r\n                </div> */}\r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => \"editable-row\"}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditableTable;\r\n\r\n// ReactDOM.render(<EditableTable />, document.getElementById(\"container\"));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport Test from \"./Table\";\r\nclass Orders extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">Orders</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"table\">\r\n                    <Test />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nOrders.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Orders;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(\r\n                    <Input\r\n                        ref={node => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>\r\n                        {this.renderCell}\r\n                    </EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                width: \"30%\",\r\n                editable: true\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: \"age\"\r\n            },\r\n            {\r\n                title: \"address\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"CreatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"UpdatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: \"0\",\r\n                    name: \"admin\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 0\"\r\n                },\r\n                {\r\n                    key: \"1\",\r\n                    name: \"vendor\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 1\"\r\n                }\r\n            ],\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter(item => item.key !== key)\r\n        });\r\n    };\r\n\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ dataSource: newData });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            }\r\n        };\r\n        const columns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{ marginBottom: 16 }}\r\n                >\r\n                    Add Packing Vendor\r\n                </Button>\r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => \"editable-row\"}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditableTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport Test from \"./Table\";\r\nclass PackingVendor extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">PackingVendor</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"table\">\r\n                    <Test />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPackingVendor.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PackingVendor;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(\r\n                    <Input\r\n                        ref={node => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>\r\n                        {this.renderCell}\r\n                    </EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                width: \"30%\",\r\n                editable: true\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: \"age\"\r\n            },\r\n            {\r\n                title: \"address\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"CreatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"UpdatedAt\",\r\n                dataIndex: \"address\"\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: \"0\",\r\n                    name: \"admin\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 0\"\r\n                },\r\n                {\r\n                    key: \"1\",\r\n                    name: \"vendor\",\r\n                    age: \"32\",\r\n                    address: \"London, Park Lane no. 1\"\r\n                }\r\n            ],\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter(item => item.key !== key)\r\n        });\r\n    };\r\n\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ dataSource: newData });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            }\r\n        };\r\n        const columns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{ marginBottom: 16 }}\r\n                >\r\n                    Add Orders\r\n                </Button>\r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => \"editable-row\"}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditableTable;\r\n\r\n// ReactDOM.render(<EditableTable />, document.getElementById(\"container\"));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport Test from \"./Table\";\r\nclass Referral extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">Referral</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"table\">\r\n                    <Test />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReferral.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Referral;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Sidebar from \"../components/Layout/SideBar\";\r\nimport DashBoard from \"../container/Dashbord\";\r\nimport User from \"../container/User\";\r\nimport Vendor from \"../container/vendor\";\r\nimport Product from \"../container/Product\";\r\nimport Staff from \"../container/Staff\";\r\nimport Role from \"../container/Role\";\r\nimport Orders from \"../container/Orders\";\r\nimport PackingVendor from \"../container/PackingVendors\";\r\nimport Referral from \"../container/Referral\";\r\n\r\nclass RootContainers extends Component {\r\n    state = {\r\n        loading: false,\r\n        opened: true,\r\n        items: []\r\n    };\r\n\r\n    render() {\r\n        const { opened } = this.state;\r\n        let getRoutes = null;\r\n\r\n        getRoutes = (\r\n            <Switch>\r\n                <Route path=\"/dashboard\" exact component={DashBoard} />\r\n                <Route path=\"/users\" exact component={User} />\r\n                <Route path=\"/vendors\" exact component={Vendor} />\r\n                <Route path=\"/staff\" exact component={Staff} />\r\n                <Route path=\"/products\" exact component={Product} />\r\n                <Route path=\"/role\" exact component={Role} />\r\n                <Route path=\"/order\" exact component={Orders} />\r\n                <Route path=\"/packingvendor\" exact component={PackingVendor} />\r\n                <Route path=\"/referral\" exact component={Referral} />\r\n            </Switch>\r\n        );\r\n        return (\r\n            <Fragment>\r\n                {/* <Header\r\n                    logoAltText=\"Kensri Admin\"\r\n                    logo={`/static/images/logo.png`}\r\n                    toggleDrawer={this.handleDrawerToggle}\r\n                    toogleNotifications={this.handleNotificationToggle}\r\n                    toggleFullscreen={this.handleFullscreenToggle}\r\n                    onclick={this.handleLogout}\r\n                /> */}\r\n\r\n                <Sidebar\r\n                    routes={this.state.items}\r\n                    opened={opened}\r\n                    toggleDrawer={this.handleDrawerToggle}\r\n                >\r\n                    {getRoutes}\r\n                </Sidebar>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RootContainers;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport Auth from \"./container/Auth/Login\";\nimport ForgotPassword from \"./container/Auth/ForgotPassword\";\nimport RootContainers from \"./container/RootContainers\";\n\nconst user = localStorage.getItem(\"myData\");\nlet route = (\n    <Switch>\n        <Route path=\"/\" component={Auth} />\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\n\n        <Redirect to=\"/\" />\n    </Switch>\n);\nif (user) {\n    route = (\n        <Switch>\n            <Route path=\"/\" component={RootContainers} />\n            {/* <Route exact path=\"/\" component={Auth} />\n            <Route exact path=\"/sidebar\" component={SiderBar} />\n           \n            <Redirect to=\"/\" /> */}\n        </Switch>\n    );\n}\nrender(\n    <BrowserRouter>{route}</BrowserRouter>,\n\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}